// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.SearchPage = (function() {
    function SearchPage(page) {
      this.page = page;
      this.tabsactivateCallback = __bind(this.tabsactivateCallback, this);
      this.initResultHolder = __bind(this.initResultHolder, this);
      this.shopChanged = __bind(this.shopChanged, this);
      this.form = $('#searchform', this.page);
      this.shopSelect = $('#shop-select', this.page);
      this.shopResultsHolders = $('.shop-results', this.page);
      this.typeResultsHolders = $('.result-holder', this.page);
      this.tabResults = {};
      this.lastActiveTab = null;
      this.lastActiveTabIndex = 0;
      this.lastShopResultHolder = null;
      this.fadeSpeed = 'fast';
      this.initResultHolders();
      this.initTabs();
      this.initShopSelect();
      this.form.on('submit', function() {
        $('#cardname', this).blur();
      });
    }

    SearchPage.prototype.initShopSelect = function() {
      this.shopSelect.change(this.shopChanged);
      return this.shopChanged();
    };

    SearchPage.prototype.shopChanged = function() {
      var holder, newCallback, oldCallback, tabLinks;
      holder = $('#' + this.shopSelect.val(), this.page);
      tabLinks = holder.find('li a');
      oldCallback = (function(_this) {
        return function() {
          var p;
          p = new $.Deferred;
          if (_this.lastShopResultHolder !== null && holder !== _this.lastShopResultHolder) {
            _this.lastShopResultHolder.fadeOut(_this.fadeSpeed, p.resolve);
          } else {
            p.resolve();
          }
          return p;
        };
      })(this);
      newCallback = (function(_this) {
        return function() {
          _this.lastShopResultHolder = holder;
          tabLinks.removeClass('ui-btn-active');
          tabLinks.eq(_this.lastActiveTabIndex).addClass('ui-btn-active');
          holder.tabs('option', 'active', _this.lastActiveTabIndex);
          _this.tabsactivateCallback(holder, _this.lastActiveTabIndex);
          return holder.fadeIn(_this.fadeSpeed);
        };
      })(this);
      return $.when(oldCallback()).then(newCallback);
    };

    SearchPage.prototype.initTabs = function() {
      var callback;
      callback = this.tabsactivateCallback;
      this.shopResultsHolders.each(function() {
        return $(this).tabs({
          'show': {
            'effect': 'fadeIn',
            'duration': 'fast'
          },
          'hide': {
            'effect': 'fadeOut',
            'duration': 'fast'
          }
        });
      });
      return this.shopResultsHolders.on('tabsactivate', function(e, ui) {
        if (ui.newTab) {
          callback($(this), ui.newTab.index());
        }
      });
    };

    SearchPage.prototype.initResultHolders = function() {
      var callback;
      callback = this.initResultHolder;
      return this.typeResultsHolders.each(function() {
        return callback(this);
      });
    };

    SearchPage.prototype.initResultHolder = function(holder) {
      var adapter, sr;
      adapter = $(holder).data('shop-id');
      sr = new SearchResult(holder, this.form);
      if (typeof this.tabResults[adapter] === 'undefined') {
        this.tabResults[adapter] = [];
      }
      return this.tabResults[adapter].push(sr);
    };

    SearchPage.prototype.tabsactivateCallback = function(holder, index) {
      var newTab;
      newTab = this.tabResults[holder.data('shop-id')][index];
      if (this.lastActiveTab) {
        if (this.lastActiveTab === newTab) {
          return;
        } else {
          this.lastActiveTab.resetActive();
        }
      }
      this.lastActiveTab = newTab;
      this.lastActiveTab.setActive();
      return this.lastActiveTabIndex = index;
    };

    return SearchPage;

  })();

}).call(this);
